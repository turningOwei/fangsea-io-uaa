<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.fangsea.uaa.domain.mapper.UserGroupMapper" >
  <resultMap id="BaseResultMap" type="io.fangsea.uaa.domain.entity.UserGroup" >
    <id column="group_id" property="groupId" jdbcType="INTEGER" />
    <result column="group_name" property="groupName" jdbcType="VARCHAR" />
    <result column="group_desc" property="groupDesc" jdbcType="VARCHAR" />
    <result column="creator_id" property="creatorId" jdbcType="INTEGER" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    group_id, group_name, group_desc, creator_id, state, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from fangsea_user_group
    where group_id = #{groupId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from fangsea_user_group
    where group_id = #{groupId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="io.fangsea.uaa.domain.entity.UserGroup" >
    insert into fangsea_user_group (group_id, group_name, group_desc, 
      creator_id, state, update_time, 
      create_time)
    values (#{groupId,jdbcType=INTEGER}, #{groupName,jdbcType=VARCHAR}, #{groupDesc,jdbcType=VARCHAR}, 
      #{creatorId,jdbcType=INTEGER}, #{state,jdbcType=TINYINT}, #{updateTime,jdbcType=INTEGER}, 
      #{createTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="io.fangsea.uaa.domain.entity.UserGroup" >
    insert into fangsea_user_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="groupName != null" >
        group_name,
      </if>
      <if test="groupDesc != null" >
        group_desc,
      </if>
      <if test="creatorId != null" >
        creator_id,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="groupId != null" >
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="groupName != null" >
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupDesc != null" >
        #{groupDesc,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.fangsea.uaa.domain.entity.UserGroup" >
    update fangsea_user_group
    <set >
      <if test="groupName != null" >
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupDesc != null" >
        group_desc = #{groupDesc,jdbcType=VARCHAR},
      </if>
      <if test="creatorId != null" >
        creator_id = #{creatorId,jdbcType=INTEGER},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where group_id = #{groupId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.fangsea.uaa.domain.entity.UserGroup" >
    update fangsea_user_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      group_desc = #{groupDesc,jdbcType=VARCHAR},
      creator_id = #{creatorId,jdbcType=INTEGER},
      state = #{state,jdbcType=TINYINT},
      update_time = #{updateTime,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=INTEGER}
    where group_id = #{groupId,jdbcType=INTEGER}
  </update>
</mapper>